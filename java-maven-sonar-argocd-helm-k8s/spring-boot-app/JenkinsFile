pipeline {
  agent {
    docker {
      image 'akash3601/maven-akash-docker-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  stages {
    stage('Checkout') {
      steps {
        // Full checkout ensures .git is present in the workspace
        checkout([
          $class: 'GitSCM',
          branches: [[name: '*/main']],
          userRemoteConfigs: [[ url: 'https://github.com/akashjaiswal360/Jenkins-Zero-To-Hero.git' ]]
        ])
        // Debugging: verify .git folder is present
        echo "Full checkout complete. Listing workspace contents:"
        sh 'ls -la'
      }
    }

    stage('Build and Test') {
      steps {
        // Build the Maven project without changing directory by using the -f flag.
        sh 'mvn clean package -f java-maven-sonar-argocd-helm-k8s/spring-boot-app/pom.xml'
      }
    }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://13.53.140.77:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            mvn sonar:sonar \
              -f java-maven-sonar-argocd-helm-k8s/spring-boot-app/pom.xml \
              -Dsonar.login=$SONAR_AUTH_TOKEN \
              -Dsonar.host.url=${SONAR_URL}
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "akash3601/ultimate-cicd:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
          // Use the spring-boot-app folder as the Docker build context
          sh 'docker build -t ${DOCKER_IMAGE} java-maven-sonar-argocd-helm-k8s/spring-boot-app'
          def dockerImage = docker.image("${DOCKER_IMAGE}")
          docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      environment {
        GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
        GIT_USER_NAME = "akashjaiswal360"
      }
      steps {
        withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
          sh '''
            echo "Current directory: $(pwd)"
            echo "Workspace contents:"
            ls -la
            # Configure Git user details
            git config user.email "akkijais00@gmail.com"
            git config user.name "akashjaiswal360"
            # Update the deployment file with the new image tag
            sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ${BUILD_NUMBER}"
            git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
          '''
        }
      }
    }
  }
}
